'use strict';

angular.module('bookStore.controllers', []).controller('StoreController',
		[ '$scope', '$location', function($scope, $location) {
			$scope.user = "Interesting Person";

			$scope.inventory = function() {
				$location.path("inventory");
			}

		} ]).controller(
		'InventoryController',
		[
				'$scope',
				'$location',
				'Inventory',
				'ngTableParams',
				'$filter',
				'InventoryContext',
				function($scope, $location, Inventory, ngTableParams, $filter, InventoryContext) {
					Inventory.list(function(data) {
						$scope.books = data;
						InventoryContext.set(data);
					});
					$scope.home = function() {
						$location.path("");
					}
					
					$scope.tableParams = new ngTableParams({
						page : 1, // show first page
						count : 10, // count per page
						sorting : {
							title : 'desc', // initial sorting
							author : 'desc'
						}
					}, {
//						total : 3, // length of data
						counts : [],
						getData : function($defer, params) {
							// use build-in angular filter
							var data = InventoryContext.get();
							var orderedData = params.sorting() ? $filter(
									'orderBy')(data, params.orderBy()) : data;

							$scope.books = orderedData;
//							$defer.resolve(orderedData);
						}
					});
				} ]);

/* Angular module and Config */
angular.module(
		'bookStore',
		[ 'ngRoute', 'bookStore.services', 'bookStore.controllers',
				'ngResource', 'ngTable' ]).config(
		[ '$routeProvider', function($routeProvider) {
			$routeProvider.when('/inventory', {
				templateUrl : 'inventory/inventoryFragment',
				controller : 'InventoryController'
			});
			$routeProvider.otherwise({
				templateUrl : 'store/welcome',
				controller : 'StoreController'
			});
		} ]);

/* Services */
var services = angular.module('bookStore.services', [ 'ngResource' ]);

services.factory('Inventory', [ '$resource', function($resource) {
	return $resource('inventory/list', {}, {
		list : {
			method : 'GET',
			isArray : true
		}
	});
} ]).factory('InventoryContext',[function(){
	var data = [];
	var set = function(newData){
		this.data = newData;
	}
	var get = function(){
		return this.data;
	}
	return {set: set, get: get}
}]);